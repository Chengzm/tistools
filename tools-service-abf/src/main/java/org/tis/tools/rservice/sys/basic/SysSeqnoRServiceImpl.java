
/**
 * Copyright (C) 2016 bronsp.com, All rights reserved.
 */
package org.tis.tools.rservice.sys.basic;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.tis.tools.base.WhereCondition;
import org.tis.tools.model.po.sys.SysSeqno;
import org.tis.tools.rservice.sys.basic.ISysSeqnoRService;
import org.tis.tools.service.sys.SysSeqnoService;

import com.alibaba.dubbo.config.annotation.Service;

/**
 * 序号资源表(SYS_SEQNO) 基本远程服务实现(服务提供者)
 * 
 * @author by generated by tools:gen-dao
 *
 */
//TEMPLATES
@Service(group = "sys", version = "1.0", interfaceClass = ISysSeqnoRService.class, timeout = 2000, document = "序号资源表的基础远程服务")
public class SysSeqnoRServiceImpl implements ISysSeqnoRService {

	@Autowired
	SysSeqnoService sysSeqnoService;

	@Override
	public void insert(SysSeqno t) {
		sysSeqnoService.insert(t);
	}

	@Override
	public void update(SysSeqno t) {
		sysSeqnoService.update(t);
	}

	@Override
	public void updateForce(SysSeqno t) {
		sysSeqnoService.updateForce(t);
	}

	@Override
	public void delete(String guid) {
		sysSeqnoService.delete(guid);
	}

	@Override
	public void deleteByCondition(WhereCondition wc) {
		sysSeqnoService.deleteByCondition(wc);
	}

	@Override
	public void updateByCondition(WhereCondition wc, SysSeqno t) {
		sysSeqnoService.updateByCondition(wc,t);
	}

	@Override
	public List<SysSeqno> query(WhereCondition wc) {
		return sysSeqnoService.query(wc);
	}

	@Override
	public int count(WhereCondition wc) {
		return sysSeqnoService.count(wc);
	}

	@Override
	public SysSeqno loadByGuid(String guid) {
		return sysSeqnoService.loadByGuid(guid);
	}

}
