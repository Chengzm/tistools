
/**
 * Copyright (C) 2016 bronsp.com, All rights reserved.
 */
package org.tis.tools.rservice.ac.basic;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.tis.tools.base.WhereCondition;
import org.tis.tools.model.po.ac.AcOperatorIdentity;
import org.tis.tools.rservice.ac.basic.IAcOperatorIdentityRService;
import org.tis.tools.service.ac.AcOperatorIdentityService;

import com.alibaba.dubbo.config.annotation.Service;

/**
 * 操作员身份(AC_OPERATOR_IDENTITY) 基本远程服务实现(服务提供者)
 * 
 * @author by generated by tools:gen-dao
 *
 */
//TEMPLATES
@Service(group = "ac", version = "1.0", interfaceClass = IAcOperatorIdentityRService.class, timeout = 2000, document = "操作员身份的基础远程服务")
public class AcOperatorIdentityRServiceImpl implements IAcOperatorIdentityRService {

	@Autowired
	AcOperatorIdentityService acOperatorIdentityService;

	@Override
	public void insert(AcOperatorIdentity t) {
		acOperatorIdentityService.insert(t);
	}

	@Override
	public void update(AcOperatorIdentity t) {
		acOperatorIdentityService.update(t);
	}

	@Override
	public void updateForce(AcOperatorIdentity t) {
		acOperatorIdentityService.updateForce(t);
	}

	@Override
	public void delete(String guid) {
		acOperatorIdentityService.delete(guid);
	}

	@Override
	public void deleteByCondition(WhereCondition wc) {
		acOperatorIdentityService.deleteByCondition(wc);
	}

	@Override
	public void updateByCondition(WhereCondition wc, AcOperatorIdentity t) {
		acOperatorIdentityService.updateByCondition(wc,t);
	}

	@Override
	public List<AcOperatorIdentity> query(WhereCondition wc) {
		return acOperatorIdentityService.query(wc);
	}

	@Override
	public int count(WhereCondition wc) {
		return acOperatorIdentityService.count(wc);
	}

	@Override
	public AcOperatorIdentity loadByGuid(String guid) {
		return acOperatorIdentityService.loadByGuid(guid);
	}

}
