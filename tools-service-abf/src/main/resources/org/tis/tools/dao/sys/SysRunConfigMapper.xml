<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="org.tis.tools.dao.sys.SysRunConfigMapper">
  
  	<insert id="insert" parameterType="org.tis.tools.model.po.sys.SysRunConfig">
	    INSERT INTO SYS_RUN_CONFIG 
	    (
	    	 guid
	    	,guid_app
	    	,group_name
	    	,key_name
	    	,value_from
	    	,value
	    	,description
	    )
	    VALUES 
	    (
			#{guid,jdbcType=VARCHAR},
			#{guidApp,jdbcType=VARCHAR},
			#{groupName,jdbcType=VARCHAR},
			#{keyName,jdbcType=VARCHAR},
			#{valueFrom,jdbcType=VARCHAR},
			#{value,jdbcType=VARCHAR},
			#{description,jdbcType=VARCHAR}
  		)
 	</insert>
 	
 	<update id="update" parameterType="org.tis.tools.model.po.sys.SysRunConfig">
    	UPDATE SYS_RUN_CONFIG 
	    <set>
		<if test="guid != null" >
			guid = #{guid,jdbcType=VARCHAR},
		</if>
		<if test="guidApp != null" >
			guid_app = #{guidApp,jdbcType=VARCHAR},
		</if>
		<if test="groupName != null" >
			group_name = #{groupName,jdbcType=VARCHAR},
		</if>
		<if test="keyName != null" >
			key_name = #{keyName,jdbcType=VARCHAR},
		</if>
		<if test="valueFrom != null" >
			value_from = #{valueFrom,jdbcType=VARCHAR},
		</if>
		<if test="value != null" >
			value = #{value,jdbcType=VARCHAR},
		</if>
		<if test="description != null" >
			description = #{description,jdbcType=VARCHAR}
		</if>
	    </set>
	    WHERE guid = #{guid}
 	</update>
 	
 	<update id="updateForce" parameterType="org.tis.tools.model.po.sys.SysRunConfig">
    	UPDATE SYS_RUN_CONFIG 
	    <set>
		guid = #{guid,jdbcType=VARCHAR},
		guid_app = #{guidApp,jdbcType=VARCHAR},
		group_name = #{groupName,jdbcType=VARCHAR},
		key_name = #{keyName,jdbcType=VARCHAR},
		value_from = #{valueFrom,jdbcType=VARCHAR},
		value = #{value,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR}
	    </set>
	    WHERE guid = #{guid}
 	</update>
 	 
    <delete id="delete" parameterType="java.lang.String">
	  	delete from SYS_RUN_CONFIG where guid = #{guid}
	</delete>
	
	<delete id="deleteByCondition" parameterType="org.tis.tools.base.WhereCondition">
	  	delete from SYS_RUN_CONFIG <include refid="Where_Clause" />
	</delete>
	
	 <update id="updateByCondition" parameterType="map">
    	UPDATE SYS_RUN_CONFIG 
	   <set>
		<if test="domain.guid != null" >
        	guid = #{domain.guid,jdbcType=VARCHAR},
      	</if>
		<if test="domain.guidApp != null" >
        	guid_app = #{domain.guidApp,jdbcType=VARCHAR},
      	</if>
		<if test="domain.groupName != null" >
        	group_name = #{domain.groupName,jdbcType=VARCHAR},
      	</if>
		<if test="domain.keyName != null" >
        	key_name = #{domain.keyName,jdbcType=VARCHAR},
      	</if>
		<if test="domain.valueFrom != null" >
        	value_from = #{domain.valueFrom,jdbcType=VARCHAR},
      	</if>
		<if test="domain.value != null" >
        	value = #{domain.value,jdbcType=VARCHAR},
      	</if>
		<if test="domain.description != null" >
        	description = #{domain.description,jdbcType=VARCHAR}
      	</if>
	    </set>
	   <where>${wc.condition}</where>
 	</update>
	 
	<select id="loadByGuid" parameterType="String" resultType="org.tis.tools.model.po.sys.SysRunConfig">
		select <include refid="Base_Column_List"/> from SYS_RUN_CONFIG where guid = #{guid}
	</select>
	
    <select id="query" resultType="org.tis.tools.model.po.sys.SysRunConfig" parameterType="org.tis.tools.base.WhereCondition" >
    	select <include refid="Base_Column_List" /> from SYS_RUN_CONFIG <include refid="Where_Clause" />
        <if test="orderBy != null" >${orderBy}</if>
        <if test="length > 0" >LIMIT ${offset}, ${length}</if>
  	</select>
  
   	<select id="count" resultType="int" parameterType="org.tis.tools.base.WhereCondition" >
	    select count(*) from SYS_RUN_CONFIG <include refid="Where_Clause"/>
  	</select>
  
	<sql id="Where_Clause">
	    <if test="condition != null"><where>${condition}</where></if> 
	</sql>
  
	<sql id="Base_Column_List" >
		 guid as `guid`
		,guid_app as `guidApp`
		,group_name as `groupName`
		,key_name as `keyName`
		,value_from as `valueFrom`
		,value as `value`
		,description as `description`
	</sql>
</mapper>