package org.tis.tools;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * Model class of 功能操作行为.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class AcBehavior implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 数据主键. */
	private String guid;

	/** 功能. */
	private AcFunc funcacFunc;

	/** 操作行为编码. */
	private String behaviorCode;

	/** 操作行为描述. */
	private String behaviorDesc;

	/** The set of 操作员特殊功能行为配置. */
	private Set<AcOperatorBehavior> acOperatorBehaviorSet;

	/**
	 * Constructor.
	 */
	public AcBehavior() {
		this.acOperatorBehaviorSet = new HashSet<AcOperatorBehavior>();
	}

	/**
	 * Set the 数据主键.
	 * 
	 * @param guid
	 *            数据主键
	 */
	public void setGuid(String guid) {
		this.guid = guid;
	}

	/**
	 * Get the 数据主键.
	 * 
	 * @return 数据主键
	 */
	public String getGuid() {
		return this.guid;
	}

	/**
	 * Set the 功能.
	 * 
	 * @param funcacFunc
	 *            功能
	 */
	public void setfuncacFunc(AcFunc funcacFunc) {
		this.funcacFunc = funcacFunc;
	}

	/**
	 * Get the 功能.
	 * 
	 * @return 功能
	 */
	public AcFunc getfuncacFunc() {
		return this.funcacFunc;
	}

	/**
	 * Set the 操作行为编码.
	 * 
	 * @param behaviorCode
	 *            操作行为编码
	 */
	public void setBehaviorCode(String behaviorCode) {
		this.behaviorCode = behaviorCode;
	}

	/**
	 * Get the 操作行为编码.
	 * 
	 * @return 操作行为编码
	 */
	public String getBehaviorCode() {
		return this.behaviorCode;
	}

	/**
	 * Set the 操作行为描述.
	 * 
	 * @param behaviorDesc
	 *            操作行为描述
	 */
	public void setBehaviorDesc(String behaviorDesc) {
		this.behaviorDesc = behaviorDesc;
	}

	/**
	 * Get the 操作行为描述.
	 * 
	 * @return 操作行为描述
	 */
	public String getBehaviorDesc() {
		return this.behaviorDesc;
	}

	/**
	 * Set the set of the 操作员特殊功能行为配置.
	 * 
	 * @param acOperatorBehaviorSet
	 *            The set of 操作员特殊功能行为配置
	 */
	public void setAcOperatorBehaviorSet(Set<AcOperatorBehavior> acOperatorBehaviorSet) {
		this.acOperatorBehaviorSet = acOperatorBehaviorSet;
	}

	/**
	 * Add the 操作员特殊功能行为配置.
	 * 
	 * @param acOperatorBehavior
	 *            操作员特殊功能行为配置
	 */
	public void addAcOperatorBehavior(AcOperatorBehavior acOperatorBehavior) {
		this.acOperatorBehaviorSet.add(acOperatorBehavior);
	}

	/**
	 * Get the set of the 操作员特殊功能行为配置.
	 * 
	 * @return The set of 操作员特殊功能行为配置
	 */
	public Set<AcOperatorBehavior> getAcOperatorBehaviorSet() {
		return this.acOperatorBehaviorSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((guid == null) ? 0 : guid.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AcBehavior other = (AcBehavior) obj;
		if (guid == null) {
			if (other.guid != null) {
				return false;
			}
		} else if (!guid.equals(other.guid)) {
			return false;
		}
		return true;
	}

}
