
/**
 * auto generated
 * Copyright (C) 2016 bronsp.com, All rights reserved.
 */
package org.tis.tools.rservice.jnl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.tis.tools.base.WhereCondition;
import org.tis.tools.model.po.jnl.TbJnlVoucher;
import org.tis.tools.rservice.jnl.ITbJnlVoucherRService;
import org.tis.tools.service.jnl.TbJnlVoucherService;

import com.alibaba.dubbo.config.annotation.Service;

/**
 * <pre>
 * auto generated by mvn bronsp:gen-dao, don't change</br>
 * 凭证流水(tb_jnl_voucher) 基本远程服务实现(服务提供者)
 * 模型：凭证流水 tb_jnl_voucher
 * 描述：凭证流水表，每个凭证都唯一关联到某个交易
 * 业务域：jnl
 * 定义文件：/Users/megapro/Develop/tis/tools/tools-core/model/model-jnl.xml
 * </pre>
 */
@Service(group = "jnl", version = "1.0", interfaceClass = ITbJnlVoucherRService.class, timeout = 2000, document = "凭证流水的基础远程服务")
public class TbJnlVoucherRServiceImpl implements ITbJnlVoucherRService {

	@Autowired
	TbJnlVoucherService tbJnlVoucherService;

	@Override
	public void insert(TbJnlVoucher t) {
		tbJnlVoucherService.insert(t);
	}

	@Override
	public void update(TbJnlVoucher t) {
		tbJnlVoucherService.update(t);
	}

	@Override
	public void updateForce(TbJnlVoucher t) {
		tbJnlVoucherService.updateForce(t);
	}

	@Override
	public void delete(String id) {
		tbJnlVoucherService.delete(id);
	}

	@Override
	public void deleteByCondition(WhereCondition wc) {
		tbJnlVoucherService.deleteByCondition(wc);
	}

	@Override
	public void updateByCondition(WhereCondition wc, TbJnlVoucher t) {
		tbJnlVoucherService.updateByCondition(wc,t);
	}

	@Override
	public List<TbJnlVoucher> query(WhereCondition wc) {
		return tbJnlVoucherService.query(wc);
	}

	@Override
	public int count(WhereCondition wc) {
		return tbJnlVoucherService.count(wc);
	}

	@Override
	public TbJnlVoucher loadById(String id) {
		return tbJnlVoucherService.loadById(id);
	}

}
