
/**
 * auto generated
 * Copyright (C) 2016 bronsp.com, All rights reserved.
 */
package org.tis.tools.rservice.jnl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.tis.tools.base.WhereCondition;
import org.tis.tools.model.po.jnl.TbJnlQueue;
import org.tis.tools.rservice.jnl.ITbJnlQueueRService;
import org.tis.tools.service.jnl.TbJnlQueueService;

import com.alibaba.dubbo.config.annotation.Service;

/**
 * <pre>
 * auto generated by mvn bronsp:gen-dao, don't change</br>
 * 排队流水(tb_jnl_queue) 基本远程服务实现(服务提供者)
 * 模型：排队流水 tb_jnl_queue
 * 描述：排队流水表
 * 业务域：jnl
 * 定义文件：/Users/megapro/Develop/tis/tools/tools-core/model/model-jnl.xml
 * </pre>
 */
@Service(group = "jnl", version = "1.0", interfaceClass = ITbJnlQueueRService.class, timeout = 2000, document = "排队流水的基础远程服务")
public class TbJnlQueueRServiceImpl implements ITbJnlQueueRService {

	@Autowired
	TbJnlQueueService tbJnlQueueService;

	@Override
	public void insert(TbJnlQueue t) {
		tbJnlQueueService.insert(t);
	}

	@Override
	public void update(TbJnlQueue t) {
		tbJnlQueueService.update(t);
	}

	@Override
	public void updateForce(TbJnlQueue t) {
		tbJnlQueueService.updateForce(t);
	}

	@Override
	public void delete(String id) {
		tbJnlQueueService.delete(id);
	}

	@Override
	public void deleteByCondition(WhereCondition wc) {
		tbJnlQueueService.deleteByCondition(wc);
	}

	@Override
	public void updateByCondition(WhereCondition wc, TbJnlQueue t) {
		tbJnlQueueService.updateByCondition(wc,t);
	}

	@Override
	public List<TbJnlQueue> query(WhereCondition wc) {
		return tbJnlQueueService.query(wc);
	}

	@Override
	public int count(WhereCondition wc) {
		return tbJnlQueueService.count(wc);
	}

	@Override
	public TbJnlQueue loadById(String id) {
		return tbJnlQueueService.loadById(id);
	}

}
