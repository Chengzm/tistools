
/**
 * Copyright (C) 2016 bronsp.com, All rights reserved.
 */
package org.tis.tools.rservice.log.basic;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.tis.tools.base.WhereCondition;
import org.tis.tools.model.po.log.LogAbfChange;
import org.tis.tools.rservice.log.basic.ILogAbfChangeRService;
import org.tis.tools.service.log.LogAbfChangeService;

import com.alibaba.dubbo.config.annotation.Service;

/**
 * 记录日志差异值(LOG_ABF_CHANGE) 基本远程服务实现(服务提供者)
 * 
 * @author by generated by tools:gen-dao
 *
 */
//TEMPLATES
@Service(group = "log", version = "1.0", interfaceClass = ILogAbfChangeRService.class, timeout = 2000, document = "记录日志差异值的基础远程服务")
public class LogAbfChangeRServiceImpl implements ILogAbfChangeRService {

	@Autowired
	LogAbfChangeService logAbfChangeService;

	@Override
	public void insert(LogAbfChange t) {
		logAbfChangeService.insert(t);
	}

	@Override
	public void update(LogAbfChange t) {
		logAbfChangeService.update(t);
	}

	@Override
	public void updateForce(LogAbfChange t) {
		logAbfChangeService.updateForce(t);
	}

	@Override
	public void delete(String guid) {
		logAbfChangeService.delete(guid);
	}

	@Override
	public void deleteByCondition(WhereCondition wc) {
		logAbfChangeService.deleteByCondition(wc);
	}

	@Override
	public void updateByCondition(WhereCondition wc, LogAbfChange t) {
		logAbfChangeService.updateByCondition(wc,t);
	}

	@Override
	public List<LogAbfChange> query(WhereCondition wc) {
		return logAbfChangeService.query(wc);
	}

	@Override
	public int count(WhereCondition wc) {
		return logAbfChangeService.count(wc);
	}

	@Override
	public LogAbfChange loadByGuid(String guid) {
		return logAbfChangeService.loadByGuid(guid);
	}

}
