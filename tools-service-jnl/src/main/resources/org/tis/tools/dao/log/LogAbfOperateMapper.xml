<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="org.tis.tools.dao.log.LogAbfOperateMapper">
  
  	<insert id="insert" parameterType="org.tis.tools.model.po.log.LogAbfOperate">
	    INSERT INTO LOG_ABF_OPERATE 
	    (
	    	 guid
	    	,operate_from
	    	,operate_type
	    	,operate_time
	    	,operate_result
	    	,operate_desc
	    	,operator_name
	    	,user_id
	    	,app_code
	    	,app_name
	    	,func_code
	    	,func_name
	    	,restful_url
	    	,stack_trace
	    	,process_desc
	    )
	    VALUES 
	    (
			#{guid,jdbcType=VARCHAR},
			#{operateFrom,jdbcType=VARCHAR},
			#{operateType,jdbcType=VARCHAR},
			#{operateTime,jdbcType=DATE},
			#{operateResult,jdbcType=VARCHAR},
			#{operateDesc,jdbcType=VARCHAR},
			#{operatorName,jdbcType=VARCHAR},
			#{userId,jdbcType=VARCHAR},
			#{appCode,jdbcType=VARCHAR},
			#{appName,jdbcType=VARCHAR},
			#{funcCode,jdbcType=VARCHAR},
			#{funcName,jdbcType=VARCHAR},
			#{restfulUrl,jdbcType=VARCHAR},
			#{stackTrace,jdbcType=VARCHAR},
			#{processDesc,jdbcType=VARCHAR}
  		)
 	</insert>
 	
 	<update id="update" parameterType="org.tis.tools.model.po.log.LogAbfOperate">
    	UPDATE LOG_ABF_OPERATE 
	    <set>
		<if test="guid != null" >
			guid = #{guid,jdbcType=VARCHAR},
		</if>
		<if test="operateFrom != null" >
			operate_from = #{operateFrom,jdbcType=VARCHAR},
		</if>
		<if test="operateType != null" >
			operate_type = #{operateType,jdbcType=VARCHAR},
		</if>
		<if test="operateTime != null" >
			operate_time = #{operateTime,jdbcType=DATE},
		</if>
		<if test="operateResult != null" >
			operate_result = #{operateResult,jdbcType=VARCHAR},
		</if>
		<if test="operateDesc != null" >
			operate_desc = #{operateDesc,jdbcType=VARCHAR},
		</if>
		<if test="operatorName != null" >
			operator_name = #{operatorName,jdbcType=VARCHAR},
		</if>
		<if test="userId != null" >
			user_id = #{userId,jdbcType=VARCHAR},
		</if>
		<if test="appCode != null" >
			app_code = #{appCode,jdbcType=VARCHAR},
		</if>
		<if test="appName != null" >
			app_name = #{appName,jdbcType=VARCHAR},
		</if>
		<if test="funcCode != null" >
			func_code = #{funcCode,jdbcType=VARCHAR},
		</if>
		<if test="funcName != null" >
			func_name = #{funcName,jdbcType=VARCHAR},
		</if>
		<if test="restfulUrl != null" >
			restful_url = #{restfulUrl,jdbcType=VARCHAR},
		</if>
		<if test="stackTrace != null" >
			stack_trace = #{stackTrace,jdbcType=VARCHAR},
		</if>
		<if test="processDesc != null" >
			process_desc = #{processDesc,jdbcType=VARCHAR}
		</if>
	    </set>
	    WHERE guid = #{guid}
 	</update>
 	
 	<update id="updateForce" parameterType="org.tis.tools.model.po.log.LogAbfOperate">
    	UPDATE LOG_ABF_OPERATE 
	    <set>
		guid = #{guid,jdbcType=VARCHAR},
		operate_from = #{operateFrom,jdbcType=VARCHAR},
		operate_type = #{operateType,jdbcType=VARCHAR},
		operate_time = #{operateTime,jdbcType=DATE},
		operate_result = #{operateResult,jdbcType=VARCHAR},
		operate_desc = #{operateDesc,jdbcType=VARCHAR},
		operator_name = #{operatorName,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=VARCHAR},
		app_code = #{appCode,jdbcType=VARCHAR},
		app_name = #{appName,jdbcType=VARCHAR},
		func_code = #{funcCode,jdbcType=VARCHAR},
		func_name = #{funcName,jdbcType=VARCHAR},
		restful_url = #{restfulUrl,jdbcType=VARCHAR},
		stack_trace = #{stackTrace,jdbcType=VARCHAR},
		process_desc = #{processDesc,jdbcType=VARCHAR}
	    </set>
	    WHERE guid = #{guid}
 	</update>
 	 
    <delete id="delete" parameterType="java.lang.String">
	  	delete from LOG_ABF_OPERATE where guid = #{guid}
	</delete>
	
	<delete id="deleteByCondition" parameterType="org.tis.tools.base.WhereCondition">
	  	delete from LOG_ABF_OPERATE <include refid="Where_Clause" />
	</delete>
	
	 <update id="updateByCondition" parameterType="map">
    	UPDATE LOG_ABF_OPERATE 
	   <set>
		<if test="domain.guid != null" >
        	guid = #{domain.guid,jdbcType=VARCHAR},
      	</if>
		<if test="domain.operateFrom != null" >
        	operate_from = #{domain.operateFrom,jdbcType=VARCHAR},
      	</if>
		<if test="domain.operateType != null" >
        	operate_type = #{domain.operateType,jdbcType=VARCHAR},
      	</if>
		<if test="domain.operateTime != null" >
        	operate_time = #{domain.operateTime,jdbcType=DATE},
      	</if>
		<if test="domain.operateResult != null" >
        	operate_result = #{domain.operateResult,jdbcType=VARCHAR},
      	</if>
		<if test="domain.operateDesc != null" >
        	operate_desc = #{domain.operateDesc,jdbcType=VARCHAR},
      	</if>
		<if test="domain.operatorName != null" >
        	operator_name = #{domain.operatorName,jdbcType=VARCHAR},
      	</if>
		<if test="domain.userId != null" >
        	user_id = #{domain.userId,jdbcType=VARCHAR},
      	</if>
		<if test="domain.appCode != null" >
        	app_code = #{domain.appCode,jdbcType=VARCHAR},
      	</if>
		<if test="domain.appName != null" >
        	app_name = #{domain.appName,jdbcType=VARCHAR},
      	</if>
		<if test="domain.funcCode != null" >
        	func_code = #{domain.funcCode,jdbcType=VARCHAR},
      	</if>
		<if test="domain.funcName != null" >
        	func_name = #{domain.funcName,jdbcType=VARCHAR},
      	</if>
		<if test="domain.restfulUrl != null" >
        	restful_url = #{domain.restfulUrl,jdbcType=VARCHAR},
      	</if>
		<if test="domain.stackTrace != null" >
        	stack_trace = #{domain.stackTrace,jdbcType=VARCHAR},
      	</if>
		<if test="domain.processDesc != null" >
        	process_desc = #{domain.processDesc,jdbcType=VARCHAR}
      	</if>
	    </set>
	   <where>${wc.condition}</where>
 	</update>
	 
	<select id="loadByGuid" parameterType="String" resultType="org.tis.tools.model.po.log.LogAbfOperate">
		select <include refid="Base_Column_List"/> from LOG_ABF_OPERATE where guid = #{guid}
	</select>
	
    <select id="query" resultType="org.tis.tools.model.po.log.LogAbfOperate" parameterType="org.tis.tools.base.WhereCondition" >
    	select <include refid="Base_Column_List" /> from LOG_ABF_OPERATE <include refid="Where_Clause" />
        <if test="orderBy != null" >${orderBy}</if>
        <if test="length > 0" >LIMIT ${offset}, ${length}</if>
  	</select>
  
   	<select id="count" resultType="int" parameterType="org.tis.tools.base.WhereCondition" >
	    select count(*) from LOG_ABF_OPERATE <include refid="Where_Clause"/>
  	</select>
  
	<sql id="Where_Clause">
	    <if test="condition != null"><where>${condition}</where></if> 
	</sql>
  
	<sql id="Base_Column_List" >
		 guid as `guid`
		,operate_from as `operateFrom`
		,operate_type as `operateType`
		,operate_time as `operateTime`
		,operate_result as `operateResult`
		,operate_desc as `operateDesc`
		,operator_name as `operatorName`
		,user_id as `userId`
		,app_code as `appCode`
		,app_name as `appName`
		,func_code as `funcCode`
		,func_name as `funcName`
		,restful_url as `restfulUrl`
		,stack_trace as `stackTrace`
		,process_desc as `processDesc`
	</sql>
</mapper>