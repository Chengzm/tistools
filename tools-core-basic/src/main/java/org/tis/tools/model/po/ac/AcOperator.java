/**
 * auto generated
 * Copyright (C) 2016 bronsp.com, All rights reserved.
 */
package org.tis.tools.model.po.ac;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Blob;
import java.sql.Time;
import java.util.Date;

import org.tis.tools.common.utils.StringUtil;

/**
 * 
 * <pre>
 * 操作员
 * 模型文件 ： E:\github\soft\tistools\tistools\tools-core-basic\model\ABF-mysql.erm
 * 业务域：ac
 * 模型：AC_OPERATOR 操作员
 *
 * 系统登录用户表，一个用户只能有一个或零个操作员
 *
 * </pre>
 * @author generated by tools:gen-dao
 *
 */
public class AcOperator implements Serializable {

 	/** serialVersionUID */
	private static final long serialVersionUID = 1L;
	
	/** 对应的数据库表名称 */
	public static final String TABLE_NAME = "AC_OPERATOR" ; 
	/* AC_OPERATOR table's columns definition */
	/** GUID ：数据主键<br/><br/>全局唯一标识符（GUID，Globally Unique Identifier），系统自动生成； */
	public static final String COLUMN_GUID = "guid" ; 
	/** USER_ID ：登录用户名<br/><br/> */
	public static final String COLUMN_USER_ID = "user_id" ; 
	/** PASSWORD ：密码<br/><br/> */
	public static final String COLUMN_PASSWORD = "password" ; 
	/** OPERATOR_NAME ：操作员姓名<br/><br/>记录当前操作员姓名（只记录当前值，不随之改变） */
	public static final String COLUMN_OPERATOR_NAME = "operator_name" ; 
	/** OPERATOR_STATUS ：操作员状态<br/><br/>取值来自业务菜单：DICT_AC_OPERATOR_STATUS 正常，挂起，注销，锁定... 系统处理状态间的流转 */
	public static final String COLUMN_OPERATOR_STATUS = "operator_status" ; 
	/** INVAL_DATE ：密码失效日期<br/><br/>指定失效时间具体到时分秒 */
	public static final String COLUMN_INVAL_DATE = "inval_date" ; 
	/** AUTH_MODE ：认证模式<br/><br/>取值来自业务菜单：DICT_AC_AUTHMODE 如：本地密码认证、LDAP认证、等 可以多选，以逗号分隔，且按照出现先后顺序进行认证； 如： pwd,captcha 表示输入密码，并且还需要验证码 */
	public static final String COLUMN_AUTH_MODE = "auth_mode" ; 
	/** LOCK_LIMIT ：锁定次数限制<br/><br/>登陆错误超过本数字，系统锁定操作员，默认5次。 可为操作员单独设置； */
	public static final String COLUMN_LOCK_LIMIT = "lock_limit" ; 
	/** ERR_COUNT ：当前错误登录次数<br/><br/> */
	public static final String COLUMN_ERR_COUNT = "err_count" ; 
	/** LOCK_TIME ：锁定时间<br/><br/> */
	public static final String COLUMN_LOCK_TIME = "lock_time" ; 
	/** UNLOCK_TIME ：解锁时间<br/><br/>当状态为锁定时，解锁的时间 */
	public static final String COLUMN_UNLOCK_TIME = "unlock_time" ; 
	/** MENU_TYPE ：菜单风格<br/><br/>取值来自业务菜单：DICT_AC_MENUTYPE 用户登录后菜单的风格 */
	public static final String COLUMN_MENU_TYPE = "menu_type" ; 
	/** LAST_LOGIN ：最近登录时间<br/><br/> */
	public static final String COLUMN_LAST_LOGIN = "last_login" ; 
	/** START_DATE ：有效开始日期<br/><br/>启用操作员时设置，任何时间可设置； */
	public static final String COLUMN_START_DATE = "start_date" ; 
	/** END_DATE ：有效截止日期<br/><br/>启用操作员时设置，任何时间可设置； */
	public static final String COLUMN_END_DATE = "end_date" ; 
	/** VALID_TIME ：允许时间范围<br/><br/>定义一个规则表达式，表示允许操作的有效时间范围，格式为： [{begin:"HH:mm",end:"HH:mm"},{begin:"HH:mm",end:"HH:mm"},...] 如： [{begin:"08:00",end:"11:30"},{begin:"14:30",end:"17:00"}] 表示，该操作员被允许每天有两个时间段进行系统操作，分别 早上08:00 - 11:30，下午14:30 － 17:00 */
	public static final String COLUMN_VALID_TIME = "valid_time" ; 
	/** MAC_CODE ：允许MAC码<br/><br/>允许设置多个MAC，以逗号分隔，控制操作员只能在这些机器上登陆。 */
	public static final String COLUMN_MAC_CODE = "mac_code" ; 
	/** IP_ADDRESS ：允许IP地址<br/><br/>允许设置多个IP地址 */
	public static final String COLUMN_IP_ADDRESS = "ip_address" ; 
	
	
	/** 字段类型：varchar<br/>字段名：数据主键<br/>描述：全局唯一标识符（GUID，Globally Unique Identifier），系统自动生成； */
	private String guid ;
	
	/** 字段类型：varchar<br/>字段名：登录用户名<br/>描述： */
	private String userId ;
	
	/** 字段类型：varchar<br/>字段名：密码<br/>描述： */
	private String password ;
	
	/** 字段类型：varchar<br/>字段名：操作员姓名<br/>描述：记录当前操作员姓名（只记录当前值，不随之改变） */
	private String operatorName ;
	
	/** 字段类型：varchar<br/>字段名：操作员状态<br/>描述：取值来自业务菜单：DICT_AC_OPERATOR_STATUS 正常，挂起，注销，锁定... 系统处理状态间的流转 */
	private String operatorStatus ;
	
	/** 字段类型：timestamp<br/>字段名：密码失效日期<br/>描述：指定失效时间具体到时分秒 */
	private Date invalDate ;
	
	/** 字段类型：varchar<br/>字段名：认证模式<br/>描述：取值来自业务菜单：DICT_AC_AUTHMODE 如：本地密码认证、LDAP认证、等 可以多选，以逗号分隔，且按照出现先后顺序进行认证； 如： pwd,captcha 表示输入密码，并且还需要验证码 */
	private String authMode ;
	
	/** 字段类型：decimal<br/>字段名：锁定次数限制<br/>描述：登陆错误超过本数字，系统锁定操作员，默认5次。 可为操作员单独设置； */
	private BigDecimal lockLimit ;
	
	/** 字段类型：decimal<br/>字段名：当前错误登录次数<br/>描述： */
	private BigDecimal errCount ;
	
	/** 字段类型：timestamp<br/>字段名：锁定时间<br/>描述： */
	private Date lockTime ;
	
	/** 字段类型：timestamp<br/>字段名：解锁时间<br/>描述：当状态为锁定时，解锁的时间 */
	private Date unlockTime ;
	
	/** 字段类型：varchar<br/>字段名：菜单风格<br/>描述：取值来自业务菜单：DICT_AC_MENUTYPE 用户登录后菜单的风格 */
	private String menuType ;
	
	/** 字段类型：timestamp<br/>字段名：最近登录时间<br/>描述： */
	private Date lastLogin ;
	
	/** 字段类型：date<br/>字段名：有效开始日期<br/>描述：启用操作员时设置，任何时间可设置； */
	private Date startDate ;
	
	/** 字段类型：date<br/>字段名：有效截止日期<br/>描述：启用操作员时设置，任何时间可设置； */
	private Date endDate ;
	
	/** 字段类型：varchar<br/>字段名：允许时间范围<br/>描述：定义一个规则表达式，表示允许操作的有效时间范围，格式为： [{begin:"HH:mm",end:"HH:mm"},{begin:"HH:mm",end:"HH:mm"},...] 如： [{begin:"08:00",end:"11:30"},{begin:"14:30",end:"17:00"}] 表示，该操作员被允许每天有两个时间段进行系统操作，分别 早上08:00 - 11:30，下午14:30 － 17:00 */
	private String validTime ;
	
	/** 字段类型：varchar<br/>字段名：允许MAC码<br/>描述：允许设置多个MAC，以逗号分隔，控制操作员只能在这些机器上登陆。 */
	private String macCode ;
	
	/** 字段类型：varchar<br/>字段名：允许IP地址<br/>描述：允许设置多个IP地址 */
	private String ipAddress ;
	
	
	/**
	 * Set the 数据主键.
	 * 
	 * @param guid
	 *            数据主键
	 */
	public void setGuid(String guid) {
 		this.guid = guid == null ? null : guid.trim() ;
    }
    
    /**
	 * Get the 数据主键.
	 * 
	 * @return 数据主键
	 */
	public String getGuid(){
		return this.guid ;
    }
	
	/**
	 * Set the 登录用户名.
	 * 
	 * @param userId
	 *            登录用户名
	 */
	public void setUserId(String userId) {
 		this.userId = userId == null ? null : userId.trim() ;
    }
    
    /**
	 * Get the 登录用户名.
	 * 
	 * @return 登录用户名
	 */
	public String getUserId(){
		return this.userId ;
    }
	
	/**
	 * Set the 密码.
	 * 
	 * @param password
	 *            密码
	 */
	public void setPassword(String password) {
 		this.password = password == null ? null : password.trim() ;
    }
    
    /**
	 * Get the 密码.
	 * 
	 * @return 密码
	 */
	public String getPassword(){
		return this.password ;
    }
	
	/**
	 * Set the 操作员姓名.
	 * 
	 * @param operatorName
	 *            操作员姓名
	 */
	public void setOperatorName(String operatorName) {
 		this.operatorName = operatorName == null ? null : operatorName.trim() ;
    }
    
    /**
	 * Get the 操作员姓名.
	 * 
	 * @return 操作员姓名
	 */
	public String getOperatorName(){
		return this.operatorName ;
    }
	
	/**
	 * Set the 操作员状态.
	 * 
	 * @param operatorStatus
	 *            操作员状态
	 */
	public void setOperatorStatus(String operatorStatus) {
 		this.operatorStatus = operatorStatus == null ? null : operatorStatus.trim() ;
    }
    
    /**
	 * Get the 操作员状态.
	 * 
	 * @return 操作员状态
	 */
	public String getOperatorStatus(){
		return this.operatorStatus ;
    }
	
	/**
	 * Set the 密码失效日期.
	 * 
	 * @param invalDate
	 *            密码失效日期
	 */
	public void setInvalDate(Date invalDate) {
 		this.invalDate = invalDate ;
    }
    
    /**
	 * Get the 密码失效日期.
	 * 
	 * @return 密码失效日期
	 */
	public Date getInvalDate(){
		return this.invalDate ;
    }
	
	/**
	 * Set the 认证模式.
	 * 
	 * @param authMode
	 *            认证模式
	 */
	public void setAuthMode(String authMode) {
 		this.authMode = authMode == null ? null : authMode.trim() ;
    }
    
    /**
	 * Get the 认证模式.
	 * 
	 * @return 认证模式
	 */
	public String getAuthMode(){
		return this.authMode ;
    }
	
	/**
	 * Set the 锁定次数限制.
	 * 
	 * @param lockLimit
	 *            锁定次数限制
	 */
	public void setLockLimit(BigDecimal lockLimit) {
 		this.lockLimit = lockLimit ;
    }
    
    /**
	 * Get the 锁定次数限制.
	 * 
	 * @return 锁定次数限制，如果setLockLimit时原值为空，返回BigDecimal(0d)
	 */
	public BigDecimal getLockLimit(){
		if(lockLimit==null){
			return new BigDecimal(0d);
		}
		return lockLimit;
    }
	
	/**
	 * Set the 当前错误登录次数.
	 * 
	 * @param errCount
	 *            当前错误登录次数
	 */
	public void setErrCount(BigDecimal errCount) {
 		this.errCount = errCount ;
    }
    
    /**
	 * Get the 当前错误登录次数.
	 * 
	 * @return 当前错误登录次数，如果setErrCount时原值为空，返回BigDecimal(0d)
	 */
	public BigDecimal getErrCount(){
		if(errCount==null){
			return new BigDecimal(0d);
		}
		return errCount;
    }
	
	/**
	 * Set the 锁定时间.
	 * 
	 * @param lockTime
	 *            锁定时间
	 */
	public void setLockTime(Date lockTime) {
 		this.lockTime = lockTime ;
    }
    
    /**
	 * Get the 锁定时间.
	 * 
	 * @return 锁定时间
	 */
	public Date getLockTime(){
		return this.lockTime ;
    }
	
	/**
	 * Set the 解锁时间.
	 * 
	 * @param unlockTime
	 *            解锁时间
	 */
	public void setUnlockTime(Date unlockTime) {
 		this.unlockTime = unlockTime ;
    }
    
    /**
	 * Get the 解锁时间.
	 * 
	 * @return 解锁时间
	 */
	public Date getUnlockTime(){
		return this.unlockTime ;
    }
	
	/**
	 * Set the 菜单风格.
	 * 
	 * @param menuType
	 *            菜单风格
	 */
	public void setMenuType(String menuType) {
 		this.menuType = menuType == null ? null : menuType.trim() ;
    }
    
    /**
	 * Get the 菜单风格.
	 * 
	 * @return 菜单风格
	 */
	public String getMenuType(){
		return this.menuType ;
    }
	
	/**
	 * Set the 最近登录时间.
	 * 
	 * @param lastLogin
	 *            最近登录时间
	 */
	public void setLastLogin(Date lastLogin) {
 		this.lastLogin = lastLogin ;
    }
    
    /**
	 * Get the 最近登录时间.
	 * 
	 * @return 最近登录时间
	 */
	public Date getLastLogin(){
		return this.lastLogin ;
    }
	
	/**
	 * Set the 有效开始日期.
	 * 
	 * @param startDate
	 *            有效开始日期
	 */
	public void setStartDate(Date startDate) {
 		this.startDate = startDate ;
    }
    
    /**
	 * Get the 有效开始日期.
	 * 
	 * @return 有效开始日期
	 */
	public Date getStartDate(){
		return this.startDate ;
    }
	
	/**
	 * Set the 有效截止日期.
	 * 
	 * @param endDate
	 *            有效截止日期
	 */
	public void setEndDate(Date endDate) {
 		this.endDate = endDate ;
    }
    
    /**
	 * Get the 有效截止日期.
	 * 
	 * @return 有效截止日期
	 */
	public Date getEndDate(){
		return this.endDate ;
    }
	
	/**
	 * Set the 允许时间范围.
	 * 
	 * @param validTime
	 *            允许时间范围
	 */
	public void setValidTime(String validTime) {
 		this.validTime = validTime == null ? null : validTime.trim() ;
    }
    
    /**
	 * Get the 允许时间范围.
	 * 
	 * @return 允许时间范围
	 */
	public String getValidTime(){
		return this.validTime ;
    }
	
	/**
	 * Set the 允许MAC码.
	 * 
	 * @param macCode
	 *            允许MAC码
	 */
	public void setMacCode(String macCode) {
 		this.macCode = macCode == null ? null : macCode.trim() ;
    }
    
    /**
	 * Get the 允许MAC码.
	 * 
	 * @return 允许MAC码
	 */
	public String getMacCode(){
		return this.macCode ;
    }
	
	/**
	 * Set the 允许IP地址.
	 * 
	 * @param ipAddress
	 *            允许IP地址
	 */
	public void setIpAddress(String ipAddress) {
 		this.ipAddress = ipAddress == null ? null : ipAddress.trim() ;
    }
    
    /**
	 * Get the 允许IP地址.
	 * 
	 * @return 允许IP地址
	 */
	public String getIpAddress(){
		return this.ipAddress ;
    }
	
	public String toString(){
		return StringUtil.toString(this) ; 
	}
}