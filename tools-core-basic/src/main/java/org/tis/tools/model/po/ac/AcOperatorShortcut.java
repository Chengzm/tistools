/**
 * auto generated
 * Copyright (C) 2017 bronsp.com, All rights reserved.
 */
package org.tis.tools.model.po.ac;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Blob;
import java.sql.Time;
import java.util.Date;

import org.tis.tools.common.utils.StringUtil;

/**
 * 
 * <pre>
 * 操作员快捷菜单
 * 模型文件 ： D:\tistools\tools-core-basic\model\ABF-mysql.erm
 * 业务域：ac
 * 模型：AC_OPERATOR_SHORTCUT 操作员快捷菜单
 *
 * 用户自定义的快捷菜单（以应用系统进行区分）；
快捷菜单中的功能可在快捷菜单面板中点击启动，也可通过对应的快捷按键启动（限于按键数量，只提供 CTRL ＋ 0 ～ 9 ，一共10个快捷按键，其余快捷交易只能通过快捷面板中点击启动。
 *
 * </pre>
 * @author generated by tools:gen-dao
 *
 */
public class AcOperatorShortcut implements Serializable {

 	/** serialVersionUID */
	private static final long serialVersionUID = 1L;
	
	/** 对应的数据库表名称 */
	public static final String TABLE_NAME = "AC_OPERATOR_SHORTCUT" ; 
	/* AC_OPERATOR_SHORTCUT table's columns definition */
	/** GUID_OPERATOR ：操作员GUID<br/><br/> */
	public static final String COLUMN_GUID_OPERATOR = "guid_operator" ; 
	/** GUID_FUNC ：功能GUID<br/><br/> */
	public static final String COLUMN_GUID_FUNC = "guid_func" ; 
	/** GUID_FUNCGROUP ：功能组GUID<br/><br/>冗余字段，方便为快捷键分组 */
	public static final String COLUMN_GUID_FUNCGROUP = "guid_funcgroup" ; 
	/** GUID_APP ：应用GUID<br/><br/>冗余字段，方便为快捷键分组 */
	public static final String COLUMN_GUID_APP = "guid_app" ; 
	/** ORDER_NO ：排列顺序<br/><br/>原类型smallint */
	public static final String COLUMN_ORDER_NO = "order_no" ; 
	/** IMAGE_PATH ：快捷菜单图片路径<br/><br/> */
	public static final String COLUMN_IMAGE_PATH = "image_path" ; 
	/** SHORTCUT_KEY ：快捷按键<br/><br/>如：CTRL+1 表示启动TX010505，本字段记录 CTRL+1 这个信息 */
	public static final String COLUMN_SHORTCUT_KEY = "shortcut_key" ; 
	/** 对应的类名 */
	public static final String CLASS_NAME = "org.tis.tools.model.po.ac.AcOperatorShortcut";
    /** GUID_OPERATOR字段名<br/> */
    public static final String NAME_GUID_OPERATOR = "操作员GUID" ;
    /** GUID_FUNC字段名<br/> */
    public static final String NAME_GUID_FUNC = "功能GUID" ;
    /** GUID_FUNCGROUP字段名<br/> */
    public static final String NAME_GUID_FUNCGROUP = "功能组GUID" ;
    /** GUID_APP字段名<br/> */
    public static final String NAME_GUID_APP = "应用GUID" ;
    /** ORDER_NO字段名<br/> */
    public static final String NAME_ORDER_NO = "排列顺序" ;
    /** IMAGE_PATH字段名<br/> */
    public static final String NAME_IMAGE_PATH = "快捷菜单图片路径" ;
    /** SHORTCUT_KEY字段名<br/> */
    public static final String NAME_SHORTCUT_KEY = "快捷按键" ;
	
	
	/** 字段类型：varchar<br/>字段名：操作员GUID<br/>描述： */
	private String guidOperator ;
	
	/** 字段类型：varchar<br/>字段名：功能GUID<br/>描述： */
	private String guidFunc ;
	
	/** 字段类型：varchar<br/>字段名：功能组GUID<br/>描述：冗余字段，方便为快捷键分组 */
	private String guidFuncgroup ;
	
	/** 字段类型：varchar<br/>字段名：应用GUID<br/>描述：冗余字段，方便为快捷键分组 */
	private String guidApp ;
	
	/** 字段类型：decimal<br/>字段名：排列顺序<br/>描述：原类型smallint */
	private BigDecimal orderNo ;
	
	/** 字段类型：varchar<br/>字段名：快捷菜单图片路径<br/>描述： */
	private String imagePath ;
	
	/** 字段类型：varchar<br/>字段名：快捷按键<br/>描述：如：CTRL+1 表示启动TX010505，本字段记录 CTRL+1 这个信息 */
	private String shortcutKey ;

	/**
	* Default Constructor
	*/
	public AcOperatorShortcut() {
	}

	
	/**
	 * Set the 操作员GUID.
	 * 
	 * @param guidOperator
	 *            操作员GUID
	 */
	public void setGuidOperator(String guidOperator) {
 		this.guidOperator = guidOperator == null ? null : guidOperator.trim() ;
    }
    
    /**
	 * Get the 操作员GUID.
	 * 
	 * @return 操作员GUID
	 */
	public String getGuidOperator(){
		return this.guidOperator ;
    }
	
	/**
	 * Set the 功能GUID.
	 * 
	 * @param guidFunc
	 *            功能GUID
	 */
	public void setGuidFunc(String guidFunc) {
 		this.guidFunc = guidFunc == null ? null : guidFunc.trim() ;
    }
    
    /**
	 * Get the 功能GUID.
	 * 
	 * @return 功能GUID
	 */
	public String getGuidFunc(){
		return this.guidFunc ;
    }
	
	/**
	 * Set the 功能组GUID.
	 * 
	 * @param guidFuncgroup
	 *            功能组GUID
	 */
	public void setGuidFuncgroup(String guidFuncgroup) {
 		this.guidFuncgroup = guidFuncgroup == null ? null : guidFuncgroup.trim() ;
    }
    
    /**
	 * Get the 功能组GUID.
	 * 
	 * @return 功能组GUID
	 */
	public String getGuidFuncgroup(){
		return this.guidFuncgroup ;
    }
	
	/**
	 * Set the 应用GUID.
	 * 
	 * @param guidApp
	 *            应用GUID
	 */
	public void setGuidApp(String guidApp) {
 		this.guidApp = guidApp == null ? null : guidApp.trim() ;
    }
    
    /**
	 * Get the 应用GUID.
	 * 
	 * @return 应用GUID
	 */
	public String getGuidApp(){
		return this.guidApp ;
    }
	
	/**
	 * Set the 排列顺序.
	 * 
	 * @param orderNo
	 *            排列顺序
	 */
	public void setOrderNo(BigDecimal orderNo) {
 		this.orderNo = orderNo ;
    }
    
    /**
	 * Get the 排列顺序.
	 * 
	 * @return 排列顺序，如果setOrderNo时原值为空，返回BigDecimal(0d)
	 */
	public BigDecimal getOrderNo(){
		if(orderNo==null){
			return new BigDecimal(0d);
		}
		return orderNo;
    }
	
	/**
	 * Set the 快捷菜单图片路径.
	 * 
	 * @param imagePath
	 *            快捷菜单图片路径
	 */
	public void setImagePath(String imagePath) {
 		this.imagePath = imagePath == null ? null : imagePath.trim() ;
    }
    
    /**
	 * Get the 快捷菜单图片路径.
	 * 
	 * @return 快捷菜单图片路径
	 */
	public String getImagePath(){
		return this.imagePath ;
    }
	
	/**
	 * Set the 快捷按键.
	 * 
	 * @param shortcutKey
	 *            快捷按键
	 */
	public void setShortcutKey(String shortcutKey) {
 		this.shortcutKey = shortcutKey == null ? null : shortcutKey.trim() ;
    }
    
    /**
	 * Get the 快捷按键.
	 * 
	 * @return 快捷按键
	 */
	public String getShortcutKey(){
		return this.shortcutKey ;
    }
	
	public String toString(){
		return StringUtil.toString(this) ; 
	}
}