package org.tis.tools;

import java.io.Serializable;

/**
 * Model class of 操作员快捷菜单.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class AcOperatorShortcut implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 数据主键. */
	private String guid;

	/** 操作员. */
	private AcOperator operatoracOperator;

	/** 功能GUID. */
	private String guidFunc;

	/** 功能组GUID. */
	private String guidFuncgroup;

	/** 应用GUID. */
	private String guidApp;

	/** 排列顺序. */
	private Integer orderNo;

	/** 快捷菜单图片路径. */
	private String imagePath;

	/** 快捷按键. */
	private String shortcutKey;

	/**
	 * Constructor.
	 */
	public AcOperatorShortcut() {
	}

	/**
	 * Set the 数据主键.
	 * 
	 * @param guid
	 *            数据主键
	 */
	public void setGuid(String guid) {
		this.guid = guid;
	}

	/**
	 * Get the 数据主键.
	 * 
	 * @return 数据主键
	 */
	public String getGuid() {
		return this.guid;
	}

	/**
	 * Set the 操作员.
	 * 
	 * @param operatoracOperator
	 *            操作员
	 */
	public void setoperatoracOperator(AcOperator operatoracOperator) {
		this.operatoracOperator = operatoracOperator;
	}

	/**
	 * Get the 操作员.
	 * 
	 * @return 操作员
	 */
	public AcOperator getoperatoracOperator() {
		return this.operatoracOperator;
	}

	/**
	 * Set the 功能GUID.
	 * 
	 * @param guidFunc
	 *            功能GUID
	 */
	public void setGuidFunc(String guidFunc) {
		this.guidFunc = guidFunc;
	}

	/**
	 * Get the 功能GUID.
	 * 
	 * @return 功能GUID
	 */
	public String getGuidFunc() {
		return this.guidFunc;
	}

	/**
	 * Set the 功能组GUID.
	 * 
	 * @param guidFuncgroup
	 *            功能组GUID
	 */
	public void setGuidFuncgroup(String guidFuncgroup) {
		this.guidFuncgroup = guidFuncgroup;
	}

	/**
	 * Get the 功能组GUID.
	 * 
	 * @return 功能组GUID
	 */
	public String getGuidFuncgroup() {
		return this.guidFuncgroup;
	}

	/**
	 * Set the 应用GUID.
	 * 
	 * @param guidApp
	 *            应用GUID
	 */
	public void setGuidApp(String guidApp) {
		this.guidApp = guidApp;
	}

	/**
	 * Get the 应用GUID.
	 * 
	 * @return 应用GUID
	 */
	public String getGuidApp() {
		return this.guidApp;
	}

	/**
	 * Set the 排列顺序.
	 * 
	 * @param orderNo
	 *            排列顺序
	 */
	public void setOrderNo(Integer orderNo) {
		this.orderNo = orderNo;
	}

	/**
	 * Get the 排列顺序.
	 * 
	 * @return 排列顺序
	 */
	public Integer getOrderNo() {
		return this.orderNo;
	}

	/**
	 * Set the 快捷菜单图片路径.
	 * 
	 * @param imagePath
	 *            快捷菜单图片路径
	 */
	public void setImagePath(String imagePath) {
		this.imagePath = imagePath;
	}

	/**
	 * Get the 快捷菜单图片路径.
	 * 
	 * @return 快捷菜单图片路径
	 */
	public String getImagePath() {
		return this.imagePath;
	}

	/**
	 * Set the 快捷按键.
	 * 
	 * @param shortcutKey
	 *            快捷按键
	 */
	public void setShortcutKey(String shortcutKey) {
		this.shortcutKey = shortcutKey;
	}

	/**
	 * Get the 快捷按键.
	 * 
	 * @return 快捷按键
	 */
	public String getShortcutKey() {
		return this.shortcutKey;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((guid == null) ? 0 : guid.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AcOperatorShortcut other = (AcOperatorShortcut) obj;
		if (guid == null) {
			if (other.guid != null) {
				return false;
			}
		} else if (!guid.equals(other.guid)) {
			return false;
		}
		return true;
	}

}
